buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:1.2.7.RELEASE')
    }
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'jacoco'

configurations { providedRuntime }

version = 1.0
description = 'Little Spring Boot project to play around.'
buildDir = 'target'

repositories { mavenCentral() }

processResources { expand(project.properties) }

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.4'
    compile("org.springframework.boot:spring-boot-starter-thymeleaf:1.2.7.RELEASE")

    compile('org.springframework.boot:spring-boot-starter-web:1.2.7.RELEASE') {
        exclude module: 'spring-boot-starter-tomcat' 
    }
    compile('org.springframework.boot:spring-boot-starter-jetty:1.2.7.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-actuator:1.2.7.RELEASE')
    providedRuntime("org.springframework.boot:spring-boot-starter-jetty")

    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'org.spockframework:spock-spring:1.0-groovy-2.4'
    testCompile 'org.springframework.boot:spring-boot-starter-test:1.2.7.RELEASE'
    testCompile 'junit:junit:4.12'
}

jar {
    baseName = this.name
    version =  this.version
}

test {
    include "**/*Test*"
    reports.html.enabled = false
    afterTest { desc, result ->
        println "Executing '${desc.name}' [${desc.className}] with result: ${result.resultType}"
    }
}

task componentTests(type: Test, dependsOn: test) {
    include "**/*CT*"
    reports.html.enabled = false
    afterTest { desc, result ->
        println "Executing '${desc.name}' [${desc.className}] with result: ${result.resultType}"
    }
}

task allTests(type: TestReport, dependsOn: ['test', 'componentTests']) {
    doFirst {
        gradle.startParameter.continueOnFailure = true
    }
    destinationDir = file("$buildDir/reports/allTests")
    tasks.withType(Test) { reportOn it }
}

check {
    dependsOn = [
        'test',
        'componentTests',
        'allTests'
    ]
}
